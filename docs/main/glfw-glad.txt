#include <iostream>
#include <glad/glad.h>
#include <GLFW/glfw3.h>

int main() {
    std::cout << "Initializing glfw...";

    if (!glfwInit()) {
        std::cout << "FAILED" << std::endl;
        return 1;
    }

    std::cout << "OK" << std::endl;

    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);
    glfwWindowHint(GLFW_RESIZABLE, GL_FALSE);

    std::cout << "Creating window...";

    GLFWwindow * window = glfwCreateWindow(640, 480, "PROJECT_NAME", nullptr, nullptr);
    glfwMakeContextCurrent(window);

    if (!window) {
        std::cout << "FAILED" << std::endl;
        glfwTerminate();
        return 1;
    }

    std::cout << "OK" << std::endl;

    std::cout << "Initializing glad...";

    if (!gladLoadGLLoader((GLADloadproc) glfwGetProcAddress)) {
        std::cout << "FAILED" << std::endl;
        return -1;
    }

    std::cout << "OK" << std::endl;

    glViewport(0, 0, 640, 480);

    while (!glfwWindowShouldClose(window)) {
        glfwPollEvents();
        glClearColor(0.2f, 0.2f, 0.2f, 1.0f);
        glClear(GL_COLOR_BUFFER_BIT);
        glfwSwapBuffers(window);
    }

    glfwTerminate();
    return 0;
}
