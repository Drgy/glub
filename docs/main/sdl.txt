#include <iostream>
#include <SDL2/SDL.h>GLM_IMPORT

int main() {
    SDL_Window * window = SDL_CreateWindow("OpenGL Boilerplate", 0, 0, 640, 480, SDL_WINDOW_OPENGL);

    if (!window) {
        std::cout << "Unable to create a window!" << std::endl;
        return -1;
    }

    SDL_GL_CreateContext(window);
    SDL_Renderer * renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);
    SDL_SetRenderDrawColor(renderer, 25, 25, 25, 255);

    std::cout << "Window created, sdl initialized..." << std::endl;
    GLM_TEST
    bool running = true;

    while (running) {
        SDL_Event Event;

        while (SDL_PollEvent(&Event)) {
            if (Event.type == SDL_KEYDOWN) {
                switch (Event.key.keysym.sym) {
                    case SDLK_ESCAPE:
                        running = false;
                        break;
                    default:
                        break;
                }
            } else if (Event.type == SDL_QUIT) {
                running = false;
            }
        }

        SDL_RenderClear(renderer);
        SDL_RenderPresent(renderer);
        SDL_GL_SwapWindow(window);
    }

    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(window);

    return 0;
}
